#include <iostream>
#include <vector>
#include <string>

std::string numberToWords(unsigned int number);

static void testNumberToWords()
{
    std::vector<std::pair<int, std::string>> tests = {
        {0, "ноль рублей"},
        {1, "один рубль"},
        {2, "два рубля"},
        {10, "десять рублей"},
        {21, "двадцать один рубль"},
        {105, "сто пять рублей"},
        {1000, "одна тысяча рублей"},
        {1000000, "один миллион рублей"},
        {1000001, "один миллион один рубль"},
        {999999999, "девятьсот девяносто девять миллионов девятьсот девяносто девять тысяч девятьсот девяносто девять рублей"},
        {123, "сто двадцать три рубля"},
        {456, "четыреста пятьдесят шесть рублей"},
        {789, "семьсот восемьдесят девять рублей"},
        {1001, "одна тысяча один рубль"},
        {1100, "одна тысяча сто рублей"},
        {15000, "пятнадцать тысяч рублей"},
        {23456, "двадцать три тысячи четыреста пятьдесят шесть рублей"},
        {654321, "шестьсот пятьдесят четыре тысячи триста двадцать один рубль"},
        {700000, "семьсот тысяч рублей"},
        {900000, "девятьсот тысяч рублей"},
        {1234567, "один миллион двести тридцать четыре тысячи пятьсот шестьдесят семь рублей"},
        {2100000, "два миллиона сто тысяч рублей"},
        {5005005, "пять миллионов пять тысяч пять рублей"},
        {9876543, "девять миллионов восемьсот семьдесят шесть тысяч пятьсот сорок три рубля"},
        {12000000, "двенадцать миллионов рублей"},
        {300000000, "триста миллионов рублей"},
        {400000000, "четыреста миллионов рублей"},
        {500000000, "пятьсот миллионов рублей"},
        {600000000, "шестьсот миллионов рублей"},
        {700000000, "семьсот миллионов рублей"},
        {800000000, "восемьсот миллионов рублей"},
        {9999999, "девять миллионов девятьсот девяносто девять тысяч девятьсот девяносто девять рублей"},
        {10000001, "десять миллионов один рубль"},
        {11111111, "одиннадцать миллионов сто одиннадцать тысяч сто одиннадцать рублей"},
        {22222222, "двадцать два миллиона двести двадцать две тысячи двести двадцать два рубля"},
        {33333333, "тридцать три миллиона триста тридцать три тысячи триста тридцать три рубля"},
        {44444444, "сорок четыре миллиона четыреста сорок четыре тысячи четыреста сорок четыре рубля"},
        {55555555, "пятьдесят пять миллионов пятьсот пятьдесят пять тысяч пятьсот пятьдесят пять рублей"},
        {66666666, "шестьдесят шесть миллионов шестьсот шестьдесят шесть тысяч шестьсот шестьдесят шесть рублей"},
        {77777777, "семьдесят семь миллионов семьсот семьдесят семь тысяч семьсот семьдесят семь рублей"},
        {88888888, "восемьдесят восемь миллионов восемьсот восемьдесят восемь тысяч восемьсот восемьдесят восемь рублей"},
        {99999999, "девяносто девять миллионов девятьсот девяносто девять тысяч девятьсот девяносто девять рублей"},
        {100000000, "сто миллионов рублей"},
        {110000000, "сто десять миллионов рублей"},
        {120000000, "сто двадцать миллионов рублей"},
        {130000000, "сто тридцать миллионов рублей"},
        {140000000, "сто сорок миллионов рублей"},
        {150000000, "сто пятьдесят миллионов рублей"},
        {160000000, "сто шестьдесят миллионов рублей"},
        {170000000, "сто семьдесят миллионов рублей"},
        {180000000, "сто восемьдесят миллионов рублей"},
        {190000000, "сто девяносто миллионов рублей"},
        {200000000, "двести миллионов рублей"},
        {250000000, "двести пятьдесят миллионов рублей"}
    };

    int total_tests = tests.size();
    int successful_tests = 0;

    // Проход по каждому тесту
    for (const auto& test : tests) {
        int number = test.first;
        std::string expected_result = test.second;
        std::string result = numberToWords(number);

        // Проверка результата
        if (result == expected_result) {
            std::cout << "Тест пройден: " << number << " -> " << result << std::endl;
            successful_tests++;
        }
        else {
            std::cout << "Тест провален: " << number << " -> " << result << " (ожидалось: " << expected_result << ")" << std::endl;
        }
    }

    std::cout << "Всего тестов: " << total_tests << std::endl;
    std::cout << "Успешных тестов: " << successful_tests << std::endl;
}
